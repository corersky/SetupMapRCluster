#!/bin/sh

mbox_help() {
  cat << EOF
Usage: $0 command

Common commands:
   help        shows this help

   init        bootstrap: installs puppet, r10k, and puppet modules
   setup       install, configure and start MapR

   start       start mapr-zookeeper and then mapr-warden
   stop        stop mapr-warden and then mapr-zookeeper
   restart     stop + start

   remove      remove mapr packages and /opt/mapr

   up          init + setup
   clean       stop + remove
EOF
}

mbox_init() {
	DIR=$(dirname $0)

	# install puppet repo
	sudo rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm

	# install puppet agent
	sudo yum install -y puppet-agent

	# install r10k from Ruby Gems
	sudo /opt/puppetlabs/puppet/bin/gem install r10k

	# download external puppet modules
	cd $DIR
	sudo /opt/puppetlabs/puppet/bin/r10k puppetfile install
}

mbox_setup() {
	DIR=$(dirname $0)
	ENVIRON=production
	# adding prefix 'FACTER_' to make $base_dir available in puppet manifests
	# using 'sudo -E' to preserve env variables
	FACTER_base_dir=$DIR sudo -E /opt/puppetlabs/bin/puppet apply --show_diff --graph \
		--modulepath $DIR/modules/:$DIR/external \
		--hiera_config $DIR/hiera.yaml \
		--environmentpath=$DIR/environments \
		--environment=$ENVIRON \
		$DIR/environments/$ENVIRON/manifests/default.pp
}

mbox_start() {
	sudo systemctl daemon-reload
	sudo systemctl start mapr-zookeeper && sudo systemctl start mapr-warden
}

mbox_stop() {
	sudo systemctl daemon-reload
	sudo systemctl stop mapr-warden && sudo systemctl stop mapr-zookeeper
}

mbox_restart() {
	sudo systemctl daemon-reload
	sudo systemctl stop mapr-warden && sudo systemctl stop mapr-zookeeper && \
	sudo systemctl start mapr-zookeeper && sudo systemctl start mapr-warden
}

mbox_up() {
	mbox_init && mbox_setup && mbox_start
}

mbox_remove() {
	sudo yum erase -y mapr-* && sudo rm -fr /opt/mapr
}

mbox_clean() {
	mbox_stop && mbox_remove
}


##### ##### main ##### #####

if [ $# -eq 0 ]; then
	mbox_help
	exit 1
fi

commandList=(help init setup start stop restart remove up clean)
command=$1
if [[ " ${commandList[*]} " == *" $command "* ]]; then
    mbox_$command
else
	echo Error: invalid command: $command
	echo
	mbox_help
fi
