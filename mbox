#!/bin/sh

mbox_help() {
  cat << EOF
Usage: $0 command

Common commands:
   help        shows this help

   init        bootstrap: installs puppet, r10k, and puppet modules
   setup       install, configure and start MapR
   up          init + setup

   start       start mapr-zookeeper and then mapr-warden
   stop        stop mapr-warden and then mapr-zookeeper
   restart     stop + start

   delmapr     remove mapr packages and /opt/mapr
   delpuppet   remove puppet

   clean       stop + delmapr
   cleanall    stop + delmapr + delpuppet
EOF
}

# The base dir of mbox
BASE_DIR=$(dirname $(readlink -f $0))
# The dir to download external (i.e., 3rd party) puppet modules
EXTERNAL=$BASE_DIR/external

mbox_init() {
	# install puppet repo
	if rpm -qa | grep puppet5-release >/dev/null; then
		echo "puppet5-release already installed"
	else
		sudo rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
	fi

	# install puppet agent
	if rpm -qa | grep puppet-agent >/dev/null; then
		echo "puppet-agent already installed"
	else
		sudo yum install -y puppet-agent
	fi

	# install r10k from Ruby Gems
	if /opt/puppetlabs/puppet/bin/gem list | grep r10k >/dev/null; then
		echo "puppet gem r10k already installed"
	else
		sudo /opt/puppetlabs/puppet/bin/gem install r10k
	fi

	# download external puppet modules
	if ls $EXTERNAL/stdlib >/dev/null 2>&1; then
		echo "puppet modules stdlib etc. already installed"
	else
		sudo /opt/puppetlabs/puppet/bin/r10k puppetfile install --puppetfile $BASE_DIR/Puppetfile --moduledir $EXTERNAL
	fi
}

mbox_setup() {
	ENVIRON=production
	# adding prefix 'FACTER_' to make $base_dir available in puppet manifests
	# using 'sudo -E' to preserve env variables
	FACTER_base_dir=$BASE_DIR sudo -E /opt/puppetlabs/bin/puppet apply --show_diff --graph \
		--modulepath $BASE_DIR/modules:$EXTERNAL \
		--hiera_config $BASE_DIR/hiera.yaml \
		--environmentpath=$BASE_DIR/environments \
		--environment=$ENVIRON \
		$BASE_DIR/environments/$ENVIRON/manifests/default.pp
}

mbox_start() {
	sudo systemctl daemon-reload
	sudo systemctl start mapr-zookeeper && sudo systemctl start mapr-warden
}

mbox_stop() {
	sudo systemctl daemon-reload
	sudo systemctl stop mapr-warden && sudo systemctl stop mapr-zookeeper
}

mbox_restart() {
	mbox_stop && mbox_start
}

mbox_delmapr() {
	sudo yum erase -y mapr-*
	sudo rm -fr /opt/mapr
}

mbox_delpuppet() {
	sudo yum erase -y puppet-agent puppet5-release
	sudo rm -fr /opt/puppetlabs
}

mbox_up() {
	mbox_init && mbox_setup
}

mbox_clean() {
	mbox_stop
	mbox_delmapr
}

mbox_cleanall() {
	mbox_clean
	mbox_delpuppet
}


##### ##### main ##### #####

if [ $# -eq 0 ]; then
	mbox_help
	exit 1
fi

commandList=(help init setup up start stop restart delmapr delpuppet clean cleanall)
command=$1
if [[ " ${commandList[*]} " == *" $command "* ]]; then
    mbox_$command
else
	echo Error: invalid command: $command
	echo
	mbox_help
fi
